---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmplacementpolicies.infra.virtrigaud.io
spec:
  group: infra.virtrigaud.io
  names:
    kind: VMPlacementPolicy
    listKind: VMPlacementPolicyList
    plural: vmplacementpolicies
    shortNames:
    - vmpp
    singular: vmplacementpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Number of VMs using this policy
      jsonPath: .status.usedByVMs[*]
      name: Used By VMs
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VMPlacementPolicy is the Schema for the vmplacementpolicies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMPlacementPolicySpec defines the desired state of VMPlacementPolicy
            properties:
              affinity:
                description: Affinity defines affinity rules for VMs
                properties:
                  clusterAffinity:
                    description: ClusterAffinity encourages VMs to be placed in the
                      same cluster
                    type: boolean
                  datastoreAffinity:
                    description: DatastoreAffinity encourages VMs to be placed on
                      the same datastore
                    type: boolean
                  hostAffinity:
                    description: HostAffinity encourages VMs to be placed on the same
                      host
                    type: boolean
                  vmAffinity:
                    description: VMAffinity defines affinity rules between VMs
                    properties:
                      preferredDuringScheduling:
                        description: PreferredDuringScheduling specifies soft affinity
                          rules
                        items:
                          description: WeightedVMAffinityTerm defines a weighted VM
                            affinity term
                          properties:
                            vmAffinityTerm:
                              description: VMAffinityTerm defines the VM affinity
                                term
                              properties:
                                labelSelector:
                                  description: LabelSelector selects VMs for affinity
                                    rules
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: Namespaces specifies which namespaces
                                    to consider
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: TopologyKey specifies the topology
                                    domain for the rule
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: Weight associated with matching the corresponding
                                VMAffinityTerm
                              format: int32
                              type: integer
                          required:
                          - vmAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringScheduling:
                        description: RequiredDuringScheduling specifies hard affinity
                          rules
                        items:
                          description: VMAffinityTerm defines a VM affinity term
                          properties:
                            labelSelector:
                              description: LabelSelector selects VMs for affinity
                                rules
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: Namespaces specifies which namespaces to
                                consider
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: TopologyKey specifies the topology domain
                                for the rule
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                type: object
              antiAffinity:
                description: AntiAffinity defines anti-affinity rules for VMs
                properties:
                  clusterAntiAffinity:
                    description: ClusterAntiAffinity prevents VMs from being placed
                      in the same cluster
                    type: boolean
                  datastoreAntiAffinity:
                    description: DatastoreAntiAffinity prevents VMs from being placed
                      on the same datastore
                    type: boolean
                  hostAntiAffinity:
                    description: HostAntiAffinity prevents VMs from being placed on
                      the same host
                    type: boolean
                  vmAntiAffinity:
                    description: VMAntiAffinity defines anti-affinity rules between
                      VMs
                    properties:
                      preferredDuringScheduling:
                        description: PreferredDuringScheduling specifies soft anti-affinity
                          rules
                        items:
                          description: WeightedVMAffinityTerm defines a weighted VM
                            affinity term
                          properties:
                            vmAffinityTerm:
                              description: VMAffinityTerm defines the VM affinity
                                term
                              properties:
                                labelSelector:
                                  description: LabelSelector selects VMs for affinity
                                    rules
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: Namespaces specifies which namespaces
                                    to consider
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: TopologyKey specifies the topology
                                    domain for the rule
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: Weight associated with matching the corresponding
                                VMAffinityTerm
                              format: int32
                              type: integer
                          required:
                          - vmAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringScheduling:
                        description: RequiredDuringScheduling specifies hard anti-affinity
                          rules
                        items:
                          description: VMAffinityTerm defines a VM affinity term
                          properties:
                            labelSelector:
                              description: LabelSelector selects VMs for affinity
                                rules
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: Namespaces specifies which namespaces to
                                consider
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: TopologyKey specifies the topology domain
                                for the rule
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                type: object
              hard:
                description: Hard constraints that must be satisfied for VM placement
                properties:
                  clusters:
                    description: Clusters specifies allowed clusters for VM placement
                    items:
                      type: string
                    type: array
                  datastores:
                    description: Datastores specifies allowed datastores for VM placement
                    items:
                      type: string
                    type: array
                  folders:
                    description: Folders specifies allowed folders for VM placement
                    items:
                      type: string
                    type: array
                  hosts:
                    description: Hosts specifies allowed hosts for VM placement
                    items:
                      type: string
                    type: array
                  networks:
                    description: Networks specifies allowed networks for VM placement
                    items:
                      type: string
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector specifies node selection criteria for
                      libvirt provider
                    type: object
                  resourcePools:
                    description: ResourcePools specifies allowed resource pools for
                      VM placement
                    items:
                      type: string
                    type: array
                  tolerations:
                    description: Tolerations specifies tolerations for node placement
                    items:
                      description: Toleration represents a toleration for node taints
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match
                          enum:
                          - NoSchedule
                          - PreferNoSchedule
                          - NoExecute
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to
                          type: string
                        operator:
                          description: Operator represents the relationship between
                            the key and value
                          enum:
                          - Exists
                          - Equal
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration tolerates the taint
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to
                          type: string
                      type: object
                    type: array
                  zones:
                    description: Zones specifies allowed availability zones
                    items:
                      type: string
                    type: array
                type: object
              soft:
                description: Soft constraints that should be satisfied if possible
                properties:
                  clusters:
                    description: Clusters specifies allowed clusters for VM placement
                    items:
                      type: string
                    type: array
                  datastores:
                    description: Datastores specifies allowed datastores for VM placement
                    items:
                      type: string
                    type: array
                  folders:
                    description: Folders specifies allowed folders for VM placement
                    items:
                      type: string
                    type: array
                  hosts:
                    description: Hosts specifies allowed hosts for VM placement
                    items:
                      type: string
                    type: array
                  networks:
                    description: Networks specifies allowed networks for VM placement
                    items:
                      type: string
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector specifies node selection criteria for
                      libvirt provider
                    type: object
                  resourcePools:
                    description: ResourcePools specifies allowed resource pools for
                      VM placement
                    items:
                      type: string
                    type: array
                  tolerations:
                    description: Tolerations specifies tolerations for node placement
                    items:
                      description: Toleration represents a toleration for node taints
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match
                          enum:
                          - NoSchedule
                          - PreferNoSchedule
                          - NoExecute
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to
                          type: string
                        operator:
                          description: Operator represents the relationship between
                            the key and value
                          enum:
                          - Exists
                          - Equal
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration tolerates the taint
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to
                          type: string
                      type: object
                    type: array
                  zones:
                    description: Zones specifies allowed availability zones
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            description: VMPlacementPolicyStatus defines the observed state of VMPlacementPolicy
            properties:
              conditions:
                description: Conditions represent the current service state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  by the controller
                format: int64
                type: integer
              usedByVMs:
                description: UsedByVMs lists VMs currently using this policy
                items:
                  description: LocalObjectReference represents a reference to an object
                    in the same namespace
                  properties:
                    name:
                      description: Name of the referenced object
                      type: string
                  required:
                  - name
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Number of VMs using this policy
      jsonPath: .status.usedByVMs[*]
      name: Used By VMs
      type: integer
    - jsonPath: .spec.priority
      name: Priority
      type: integer
    - jsonPath: .status.placementStats.successfulPlacements
      name: Successful
      type: integer
    - jsonPath: .status.placementStats.failedPlacements
      name: Failed
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMPlacementPolicy is the Schema for the vmplacementpolicies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMPlacementPolicySpec defines the desired state of VMPlacementPolicy
            properties:
              affinity:
                description: Affinity defines affinity rules for VMs
                properties:
                  applicationAffinity:
                    description: ApplicationAffinity encourages VMs from the same
                      application to be co-located
                    properties:
                      applicationLabel:
                        default: app
                        description: ApplicationLabel specifies the label key used
                          to identify applications
                        type: string
                      enabled:
                        description: Enabled indicates if application affinity is
                          enabled
                        type: boolean
                      scope:
                        description: Scope defines the scope of the affinity rule
                        enum:
                        - strict
                        - preferred
                        type: string
                    required:
                    - enabled
                    type: object
                  clusterAffinity:
                    description: ClusterAffinity encourages VMs to be placed in the
                      same cluster
                    properties:
                      enabled:
                        description: Enabled indicates if cluster affinity is enabled
                        type: boolean
                      preferredClusters:
                        description: PreferredClusters lists preferred clusters
                        items:
                          type: string
                        maxItems: 20
                        type: array
                      scope:
                        description: Scope defines the scope of the affinity rule
                        enum:
                        - strict
                        - preferred
                        type: string
                    required:
                    - enabled
                    type: object
                  datastoreAffinity:
                    description: DatastoreAffinity encourages VMs to be placed on
                      the same datastore
                    properties:
                      enabled:
                        description: Enabled indicates if datastore affinity is enabled
                        type: boolean
                      preferredDatastores:
                        description: PreferredDatastores lists preferred datastores
                        items:
                          type: string
                        maxItems: 50
                        type: array
                      scope:
                        description: Scope defines the scope of the affinity rule
                        enum:
                        - strict
                        - preferred
                        type: string
                    required:
                    - enabled
                    type: object
                  hostAffinity:
                    description: HostAffinity encourages VMs to be placed on the same
                      host
                    properties:
                      enabled:
                        description: Enabled indicates if host affinity is enabled
                        type: boolean
                      preferredHosts:
                        description: PreferredHosts lists preferred hosts
                        items:
                          type: string
                        maxItems: 50
                        type: array
                      scope:
                        description: Scope defines the scope of the affinity rule
                        enum:
                        - strict
                        - preferred
                        type: string
                    required:
                    - enabled
                    type: object
                  vmAffinity:
                    description: VMAffinity defines affinity rules between VMs
                    properties:
                      preferredDuringScheduling:
                        description: PreferredDuringScheduling specifies soft affinity
                          rules
                        items:
                          description: WeightedVMAffinityTerm defines a weighted VM
                            affinity term
                          properties:
                            vmAffinityTerm:
                              description: VMAffinityTerm defines the VM affinity
                                term
                              properties:
                                labelSelector:
                                  description: LabelSelector selects VMs for affinity
                                    rules
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchExpressions:
                                  description: MatchExpressions is a list of VM selector
                                    requirements
                                  items:
                                    description: VMSelectorRequirement defines a VM
                                      selector requirement
                                    properties:
                                      key:
                                        description: Key is the label key that the
                                          selector applies to
                                        maxLength: 253
                                        type: string
                                      operator:
                                        allOf:
                                        - enum:
                                          - In
                                          - NotIn
                                          - Exists
                                          - DoesNotExist
                                        - enum:
                                          - In
                                          - NotIn
                                          - Exists
                                          - DoesNotExist
                                        description: Operator represents a key's relationship
                                          to a set of values
                                        type: string
                                      values:
                                        description: Values is an array of string
                                          values
                                        items:
                                          type: string
                                        maxItems: 50
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  maxItems: 20
                                  type: array
                                namespaceSelector:
                                  description: NamespaceSelector selects namespaces
                                    using label selectors
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: Namespaces specifies which namespaces
                                    to consider
                                  items:
                                    type: string
                                  maxItems: 20
                                  type: array
                                topologyKey:
                                  description: TopologyKey specifies the topology
                                    domain for the rule
                                  maxLength: 253
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: Weight associated with matching the corresponding
                                VMAffinityTerm
                              format: int32
                              maximum: 100
                              minimum: 1
                              type: integer
                          required:
                          - vmAffinityTerm
                          - weight
                          type: object
                        maxItems: 20
                        type: array
                      requiredDuringScheduling:
                        description: RequiredDuringScheduling specifies hard affinity
                          rules
                        items:
                          description: VMAffinityTerm defines a VM affinity term
                          properties:
                            labelSelector:
                              description: LabelSelector selects VMs for affinity
                                rules
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            matchExpressions:
                              description: MatchExpressions is a list of VM selector
                                requirements
                              items:
                                description: VMSelectorRequirement defines a VM selector
                                  requirement
                                properties:
                                  key:
                                    description: Key is the label key that the selector
                                      applies to
                                    maxLength: 253
                                    type: string
                                  operator:
                                    allOf:
                                    - enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                    - enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                    description: Operator represents a key's relationship
                                      to a set of values
                                    type: string
                                  values:
                                    description: Values is an array of string values
                                    items:
                                      type: string
                                    maxItems: 50
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              maxItems: 20
                              type: array
                            namespaceSelector:
                              description: NamespaceSelector selects namespaces using
                                label selectors
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: Namespaces specifies which namespaces to
                                consider
                              items:
                                type: string
                              maxItems: 20
                              type: array
                            topologyKey:
                              description: TopologyKey specifies the topology domain
                                for the rule
                              maxLength: 253
                              type: string
                          required:
                          - topologyKey
                          type: object
                        maxItems: 20
                        type: array
                    type: object
                  zoneAffinity:
                    description: ZoneAffinity encourages VMs to be placed in the same
                      zone
                    properties:
                      enabled:
                        description: Enabled indicates if zone affinity is enabled
                        type: boolean
                      preferredZones:
                        description: PreferredZones lists preferred zones
                        items:
                          type: string
                        maxItems: 10
                        type: array
                      scope:
                        description: Scope defines the scope of the affinity rule
                        enum:
                        - strict
                        - preferred
                        type: string
                    required:
                    - enabled
                    type: object
                type: object
              antiAffinity:
                description: AntiAffinity defines anti-affinity rules for VMs
                properties:
                  applicationAntiAffinity:
                    description: ApplicationAntiAffinity prevents VMs from different
                      applications being co-located
                    properties:
                      applicationLabel:
                        default: app
                        description: ApplicationLabel specifies the label key used
                          to identify applications
                        type: string
                      enabled:
                        description: Enabled indicates if application anti-affinity
                          is enabled
                        type: boolean
                      scope:
                        description: Scope defines the scope of the anti-affinity
                          rule
                        enum:
                        - strict
                        - preferred
                        type: string
                    required:
                    - enabled
                    type: object
                  clusterAntiAffinity:
                    description: ClusterAntiAffinity prevents VMs from being placed
                      in the same cluster
                    properties:
                      enabled:
                        description: Enabled indicates if cluster anti-affinity is
                          enabled
                        type: boolean
                      maxVMsPerCluster:
                        description: MaxVMsPerCluster limits the number of VMs per
                          cluster
                        format: int32
                        maximum: 10000
                        minimum: 1
                        type: integer
                      scope:
                        description: Scope defines the scope of the anti-affinity
                          rule
                        enum:
                        - strict
                        - preferred
                        type: string
                    required:
                    - enabled
                    type: object
                  datastoreAntiAffinity:
                    description: DatastoreAntiAffinity prevents VMs from being placed
                      on the same datastore
                    properties:
                      enabled:
                        description: Enabled indicates if datastore anti-affinity
                          is enabled
                        type: boolean
                      maxVMsPerDatastore:
                        description: MaxVMsPerDatastore limits the number of VMs per
                          datastore
                        format: int32
                        maximum: 10000
                        minimum: 1
                        type: integer
                      scope:
                        description: Scope defines the scope of the anti-affinity
                          rule
                        enum:
                        - strict
                        - preferred
                        type: string
                    required:
                    - enabled
                    type: object
                  hostAntiAffinity:
                    description: HostAntiAffinity prevents VMs from being placed on
                      the same host
                    properties:
                      enabled:
                        description: Enabled indicates if host anti-affinity is enabled
                        type: boolean
                      maxVMsPerHost:
                        description: MaxVMsPerHost limits the number of VMs per host
                        format: int32
                        maximum: 1000
                        minimum: 1
                        type: integer
                      scope:
                        description: Scope defines the scope of the anti-affinity
                          rule
                        enum:
                        - strict
                        - preferred
                        type: string
                    required:
                    - enabled
                    type: object
                  vmAntiAffinity:
                    description: VMAntiAffinity defines anti-affinity rules between
                      VMs
                    properties:
                      preferredDuringScheduling:
                        description: PreferredDuringScheduling specifies soft anti-affinity
                          rules
                        items:
                          description: WeightedVMAffinityTerm defines a weighted VM
                            affinity term
                          properties:
                            vmAffinityTerm:
                              description: VMAffinityTerm defines the VM affinity
                                term
                              properties:
                                labelSelector:
                                  description: LabelSelector selects VMs for affinity
                                    rules
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchExpressions:
                                  description: MatchExpressions is a list of VM selector
                                    requirements
                                  items:
                                    description: VMSelectorRequirement defines a VM
                                      selector requirement
                                    properties:
                                      key:
                                        description: Key is the label key that the
                                          selector applies to
                                        maxLength: 253
                                        type: string
                                      operator:
                                        allOf:
                                        - enum:
                                          - In
                                          - NotIn
                                          - Exists
                                          - DoesNotExist
                                        - enum:
                                          - In
                                          - NotIn
                                          - Exists
                                          - DoesNotExist
                                        description: Operator represents a key's relationship
                                          to a set of values
                                        type: string
                                      values:
                                        description: Values is an array of string
                                          values
                                        items:
                                          type: string
                                        maxItems: 50
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  maxItems: 20
                                  type: array
                                namespaceSelector:
                                  description: NamespaceSelector selects namespaces
                                    using label selectors
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: Namespaces specifies which namespaces
                                    to consider
                                  items:
                                    type: string
                                  maxItems: 20
                                  type: array
                                topologyKey:
                                  description: TopologyKey specifies the topology
                                    domain for the rule
                                  maxLength: 253
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: Weight associated with matching the corresponding
                                VMAffinityTerm
                              format: int32
                              maximum: 100
                              minimum: 1
                              type: integer
                          required:
                          - vmAffinityTerm
                          - weight
                          type: object
                        maxItems: 20
                        type: array
                      requiredDuringScheduling:
                        description: RequiredDuringScheduling specifies hard anti-affinity
                          rules
                        items:
                          description: VMAffinityTerm defines a VM affinity term
                          properties:
                            labelSelector:
                              description: LabelSelector selects VMs for affinity
                                rules
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            matchExpressions:
                              description: MatchExpressions is a list of VM selector
                                requirements
                              items:
                                description: VMSelectorRequirement defines a VM selector
                                  requirement
                                properties:
                                  key:
                                    description: Key is the label key that the selector
                                      applies to
                                    maxLength: 253
                                    type: string
                                  operator:
                                    allOf:
                                    - enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                    - enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                    description: Operator represents a key's relationship
                                      to a set of values
                                    type: string
                                  values:
                                    description: Values is an array of string values
                                    items:
                                      type: string
                                    maxItems: 50
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              maxItems: 20
                              type: array
                            namespaceSelector:
                              description: NamespaceSelector selects namespaces using
                                label selectors
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: Namespaces specifies which namespaces to
                                consider
                              items:
                                type: string
                              maxItems: 20
                              type: array
                            topologyKey:
                              description: TopologyKey specifies the topology domain
                                for the rule
                              maxLength: 253
                              type: string
                          required:
                          - topologyKey
                          type: object
                        maxItems: 20
                        type: array
                    type: object
                  zoneAntiAffinity:
                    description: ZoneAntiAffinity prevents VMs from being placed in
                      the same zone
                    properties:
                      enabled:
                        description: Enabled indicates if zone anti-affinity is enabled
                        type: boolean
                      maxVMsPerZone:
                        description: MaxVMsPerZone limits the number of VMs per zone
                        format: int32
                        maximum: 10000
                        minimum: 1
                        type: integer
                      scope:
                        description: Scope defines the scope of the anti-affinity
                          rule
                        enum:
                        - strict
                        - preferred
                        type: string
                    required:
                    - enabled
                    type: object
                type: object
              hard:
                description: Hard constraints that must be satisfied for VM placement
                properties:
                  clusters:
                    description: Clusters specifies allowed clusters for VM placement
                    items:
                      type: string
                    maxItems: 50
                    type: array
                  datastores:
                    description: Datastores specifies allowed datastores for VM placement
                    items:
                      type: string
                    maxItems: 100
                    type: array
                  excludedClusters:
                    description: ExcludedClusters specifies clusters to exclude from
                      placement
                    items:
                      type: string
                    maxItems: 50
                    type: array
                  excludedDatastores:
                    description: ExcludedDatastores specifies datastores to exclude
                      from placement
                    items:
                      type: string
                    maxItems: 100
                    type: array
                  excludedHosts:
                    description: ExcludedHosts specifies hosts to exclude from placement
                    items:
                      type: string
                    maxItems: 200
                    type: array
                  folders:
                    description: Folders specifies allowed folders for VM placement
                    items:
                      type: string
                    maxItems: 50
                    type: array
                  hosts:
                    description: Hosts specifies allowed hosts for VM placement
                    items:
                      type: string
                    maxItems: 200
                    type: array
                  networks:
                    description: Networks specifies allowed networks for VM placement
                    items:
                      type: string
                    maxItems: 50
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector specifies node selection criteria for
                      libvirt provider
                    maxProperties: 20
                    type: object
                  regions:
                    description: Regions specifies allowed regions
                    items:
                      type: string
                    maxItems: 20
                    type: array
                  resourcePools:
                    description: ResourcePools specifies allowed resource pools for
                      VM placement
                    items:
                      type: string
                    maxItems: 100
                    type: array
                  tolerations:
                    description: Tolerations specifies tolerations for node placement
                    items:
                      description: VMToleration represents a toleration for VM placement
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match
                          enum:
                          - NoSchedule
                          - PreferNoSchedule
                          - NoExecute
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to
                          maxLength: 253
                          type: string
                        operator:
                          allOf:
                          - enum:
                            - Exists
                            - Equal
                          - enum:
                            - Exists
                            - Equal
                          default: Equal
                          description: Operator represents the relationship between
                            the key and value
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration tolerates the taint
                          format: int64
                          minimum: 0
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to
                          maxLength: 253
                          type: string
                      type: object
                    maxItems: 20
                    type: array
                  zones:
                    description: Zones specifies allowed availability zones
                    items:
                      type: string
                    maxItems: 20
                    type: array
                type: object
              priority:
                description: Priority defines the priority of this placement policy
                format: int32
                maximum: 1000
                minimum: 0
                type: integer
              resourceConstraints:
                description: ResourceConstraints defines resource-based placement
                  constraints
                properties:
                  maxCPUUtilization:
                    description: MaxCPUUtilization specifies maximum allowed CPU utilization
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                  maxDiskUtilization:
                    description: MaxDiskUtilization specifies maximum allowed disk
                      utilization
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                  maxMemoryUtilization:
                    description: MaxMemoryUtilization specifies maximum allowed memory
                      utilization
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                  minCPUPerHost:
                    description: MinCPUPerHost specifies minimum CPU available per
                      host
                    format: int32
                    minimum: 1
                    type: integer
                  minDiskSpacePerHost:
                    anyOf:
                    - type: integer
                    - type: string
                    description: MinDiskSpacePerHost specifies minimum disk space
                      available per host
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  minMemoryPerHost:
                    anyOf:
                    - type: integer
                    - type: string
                    description: MinMemoryPerHost specifies minimum memory available
                      per host
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  preferredFeatures:
                    description: PreferredFeatures lists preferred hardware features
                    items:
                      type: string
                    maxItems: 20
                    type: array
                  requiredFeatures:
                    description: RequiredFeatures lists required hardware features
                    items:
                      type: string
                    maxItems: 20
                    type: array
                type: object
              securityConstraints:
                description: SecurityConstraints defines security-based placement
                  constraints
                properties:
                  allowedSecurityGroups:
                    description: AllowedSecurityGroups lists allowed security groups
                    items:
                      type: string
                    maxItems: 20
                    type: array
                  deniedSecurityGroups:
                    description: DeniedSecurityGroups lists denied security groups
                    items:
                      type: string
                    maxItems: 20
                    type: array
                  isolationLevel:
                    description: IsolationLevel specifies the required isolation level
                    enum:
                    - none
                    - basic
                    - strict
                    - maximum
                    type: string
                  requireEncryptedStorage:
                    description: RequireEncryptedStorage requires hosts that support
                      encrypted storage
                    type: boolean
                  requireNUMATopology:
                    description: RequireNUMATopology requires hosts that support NUMA
                      topology
                    type: boolean
                  requireSecureBoot:
                    description: RequireSecureBoot requires hosts that support secure
                      boot
                    type: boolean
                  requireTPM:
                    description: RequireTPM requires hosts that support TPM
                    type: boolean
                  trustLevel:
                    description: TrustLevel specifies the required trust level
                    enum:
                    - untrusted
                    - basic
                    - trusted
                    - highly-trusted
                    type: string
                type: object
              soft:
                description: Soft constraints that should be satisfied if possible
                properties:
                  clusters:
                    description: Clusters specifies allowed clusters for VM placement
                    items:
                      type: string
                    maxItems: 50
                    type: array
                  datastores:
                    description: Datastores specifies allowed datastores for VM placement
                    items:
                      type: string
                    maxItems: 100
                    type: array
                  excludedClusters:
                    description: ExcludedClusters specifies clusters to exclude from
                      placement
                    items:
                      type: string
                    maxItems: 50
                    type: array
                  excludedDatastores:
                    description: ExcludedDatastores specifies datastores to exclude
                      from placement
                    items:
                      type: string
                    maxItems: 100
                    type: array
                  excludedHosts:
                    description: ExcludedHosts specifies hosts to exclude from placement
                    items:
                      type: string
                    maxItems: 200
                    type: array
                  folders:
                    description: Folders specifies allowed folders for VM placement
                    items:
                      type: string
                    maxItems: 50
                    type: array
                  hosts:
                    description: Hosts specifies allowed hosts for VM placement
                    items:
                      type: string
                    maxItems: 200
                    type: array
                  networks:
                    description: Networks specifies allowed networks for VM placement
                    items:
                      type: string
                    maxItems: 50
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector specifies node selection criteria for
                      libvirt provider
                    maxProperties: 20
                    type: object
                  regions:
                    description: Regions specifies allowed regions
                    items:
                      type: string
                    maxItems: 20
                    type: array
                  resourcePools:
                    description: ResourcePools specifies allowed resource pools for
                      VM placement
                    items:
                      type: string
                    maxItems: 100
                    type: array
                  tolerations:
                    description: Tolerations specifies tolerations for node placement
                    items:
                      description: VMToleration represents a toleration for VM placement
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match
                          enum:
                          - NoSchedule
                          - PreferNoSchedule
                          - NoExecute
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to
                          maxLength: 253
                          type: string
                        operator:
                          allOf:
                          - enum:
                            - Exists
                            - Equal
                          - enum:
                            - Exists
                            - Equal
                          default: Equal
                          description: Operator represents the relationship between
                            the key and value
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration tolerates the taint
                          format: int64
                          minimum: 0
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to
                          maxLength: 253
                          type: string
                      type: object
                    maxItems: 20
                    type: array
                  zones:
                    description: Zones specifies allowed availability zones
                    items:
                      type: string
                    maxItems: 20
                    type: array
                type: object
              weight:
                description: Weight defines the weight of this placement policy
                format: int32
                maximum: 100
                minimum: 1
                type: integer
            type: object
          status:
            description: VMPlacementPolicyStatus defines the observed state of VMPlacementPolicy
            properties:
              conditions:
                description: Conditions represent the current service state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              conflictingPolicies:
                description: ConflictingPolicies lists policies that conflict with
                  this policy
                items:
                  description: PolicyConflict represents a conflict between policies
                  properties:
                    conflictType:
                      description: ConflictType describes the type of conflict
                      enum:
                      - hard
                      - soft
                      - resource
                      - security
                      - affinity
                      type: string
                    description:
                      description: Description provides details about the conflict
                      type: string
                    policyName:
                      description: PolicyName is the name of the conflicting policy
                      type: string
                    resolutionSuggestion:
                      description: ResolutionSuggestion provides suggestions for resolving
                        the conflict
                      type: string
                    severity:
                      description: Severity indicates the severity of the conflict
                      enum:
                      - low
                      - medium
                      - high
                      - critical
                      type: string
                  required:
                  - conflictType
                  - policyName
                  type: object
                maxItems: 50
                type: array
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  by the controller
                format: int64
                type: integer
              placementStats:
                description: PlacementStats provides statistics about VM placements
                  using this policy
                properties:
                  averagePlacementTime:
                    description: AveragePlacementTime is the average time for VM placement
                    type: string
                  constraintViolations:
                    description: ConstraintViolations is the number of constraint
                      violations
                    format: int32
                    type: integer
                  failedPlacements:
                    description: FailedPlacements is the number of failed placements
                    format: int32
                    type: integer
                  lastPlacementTime:
                    description: LastPlacementTime is when the last VM was placed
                      using this policy
                    format: date-time
                    type: string
                  placementDistribution:
                    additionalProperties:
                      format: int32
                      type: integer
                    description: PlacementDistribution shows how VMs are distributed
                      across hosts/clusters
                    type: object
                  successfulPlacements:
                    description: SuccessfulPlacements is the number of successful
                      placements
                    format: int32
                    type: integer
                  totalPlacements:
                    description: TotalPlacements is the total number of VM placements
                      using this policy
                    format: int32
                    type: integer
                type: object
              usedByVMs:
                description: UsedByVMs lists VMs currently using this policy
                items:
                  description: LocalObjectReference represents a reference to an object
                    in the same namespace
                  properties:
                    name:
                      description: Name of the referenced object
                      maxLength: 253
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 1000
                type: array
              validationResults:
                additionalProperties:
                  description: PolicyValidationResult represents a validation result
                    for a provider
                  properties:
                    errors:
                      description: Errors lists any validation errors
                      items:
                        type: string
                      maxItems: 20
                      type: array
                    lastValidated:
                      description: LastValidated is when this validation was last
                        performed
                      format: date-time
                      type: string
                    message:
                      description: Message provides details about the validation result
                      type: string
                    supportedFeatures:
                      description: SupportedFeatures lists features supported by the
                        provider
                      items:
                        type: string
                      maxItems: 50
                      type: array
                    unsupportedFeatures:
                      description: UnsupportedFeatures lists features not supported
                        by the provider
                      items:
                        type: string
                      maxItems: 50
                      type: array
                    valid:
                      description: Valid indicates if the policy is valid for the
                        provider
                      type: boolean
                    warnings:
                      description: Warnings lists any validation warnings
                      items:
                        type: string
                      maxItems: 20
                      type: array
                  required:
                  - valid
                  type: object
                description: ValidationResults contains validation results for different
                  providers
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
