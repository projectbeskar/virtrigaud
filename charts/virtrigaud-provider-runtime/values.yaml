# Default values for virtrigaud-provider-runtime
replicaCount: 1

image:
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# RBAC configuration
rbac:
  create: true
  # Rules for the service account (namespace-scoped)
  rules: []
  # Example rules for providers that need to read ConfigMaps and Secrets:
  # rules:
  #   - apiGroups: [""]
  #     resources: ["configmaps", "secrets"]
  #     verbs: ["get", "list", "watch"]

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 65532
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532

service:
  type: ClusterIP
  port: 9443
  targetPort: grpc
  # Additional ports for health checks, metrics, etc.
  additionalPorts:
    - name: health
      port: 8080
      targetPort: health

# Environment variables for the provider
env: []
# Example environment variables:
# env:
#   - name: LOG_LEVEL
#     value: "info"
#   - name: VSPHERE_SERVER
#     valueFrom:
#       secretKeyRef:
#         name: vsphere-credentials
#         key: server
#   - name: VSPHERE_USERNAME
#     valueFrom:
#       secretKeyRef:
#         name: vsphere-credentials
#         key: username
#   - name: VSPHERE_PASSWORD
#     valueFrom:
#       secretKeyRef:
#         name: vsphere-credentials
#         key: password

# TLS configuration
tls:
  enabled: false
  secretName: ""
  # If enabled, mount TLS certificates from the specified secret
  # The secret should contain tls.crt and tls.key keys

# Provider credentials
credentials:
  secretName: ""
  # If specified, mount credentials from the specified secret

# Volumes and volume mounts
volumes: []
volumeMounts: []

# Resource limits and requests
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Horizontal Pod Autoscaler
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Liveness and readiness probes
livenessProbe:
  grpc:
    port: 9443
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  grpc:
    port: 9443
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Network Policy
networkPolicy:
  enabled: false
  ingress:
    # Allow ingress from manager namespace
    fromNamespaces:
      - virtrigaud-system
  egress:
    # Allow egress to hypervisor endpoints
    - {} # Allow all egress by default

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Metrics configuration
metrics:
  enabled: false
  port: 8080
  path: /metrics
  serviceMonitor:
    enabled: false
    # Additional labels for ServiceMonitor
    labels: {}
    # Scrape interval
    interval: 30s

# Provider-specific configuration examples
examples:
  # vSphere provider configuration
  vsphere:
    image:
      repository: ghcr.io/projectbeskar/virtrigaud/provider-vsphere
      tag: "0.1.1"
    env:
      - name: VSPHERE_SERVER
        value: "vcenter.example.com"
      - name: VSPHERE_USERNAME
        valueFrom:
          secretKeyRef:
            name: vsphere-credentials
            key: username
      - name: VSPHERE_PASSWORD
        valueFrom:
          secretKeyRef:
            name: vsphere-credentials
            key: password
    credentials:
      secretName: vsphere-credentials

  # Libvirt provider configuration  
  libvirt:
    image:
      repository: ghcr.io/projectbeskar/virtrigaud/provider-libvirt
      tag: "0.1.1"
    env:
      - name: LIBVIRT_URI
        value: "qemu:///system"
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 200m
        memory: 256Mi

  # Mock provider configuration
  mock:
    image:
      repository: ghcr.io/projectbeskar/virtrigaud/provider-mock
      tag: "0.1.1"
    env:
      - name: LOG_LEVEL
        value: "debug"
      - name: MOCK_SLOW_MODE
        value: "false"
      - name: MOCK_FAILURE_MODE
        value: ""
