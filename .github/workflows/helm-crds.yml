name: Helm CRD Installation

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'charts/**'
      - 'config/crd/**'
      - '.github/workflows/helm-crds.yml'
  push:
    branches: [ main ]
    paths:
      - 'charts/**'
      - 'config/crd/**'
      - '.github/workflows/helm-crds.yml'

env:
  GO_VERSION: '1.23'

jobs:
  helm-crd-install-check:
    runs-on: ubuntu-latest
    name: Helm CRD Install Check
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Set up Kind cluster
      uses: helm/kind-action@v1
      with:
        version: v0.24.0
        cluster_name: virtrigaud-helm-test
        wait: 60s
        verbosity: 1

    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: 'latest'

    - name: Install virtrigaud chart (CRDs included)
      run: |
        helm install virtrigaud charts/virtrigaud \
          --wait \
          --timeout 5m \
          --set manager.image.repository=test \
          --set manager.image.tag=test \
          --dry-run=false

    - name: Verify CRDs were installed
      run: |
        kubectl get crd virtualmachines.infra.virtrigaud.io -o yaml | grep "conversion:" || {
          echo "Error: VirtualMachine CRD missing conversion webhook"
          exit 1
        }
        
        kubectl get crd providers.infra.virtrigaud.io -o yaml | grep "conversion:" || {
          echo "Error: Provider CRD missing conversion webhook"
          exit 1
        }

    - name: Verify conversion webhook configuration
      run: |
        kubectl get crd virtualmachines.infra.virtrigaud.io -o yaml | grep -A5 "conversion:" | grep "path: /convert" || {
          echo "Error: Conversion webhook path not configured correctly"
          exit 1
        }

    - name: Check CRD versions
      run: |
        echo "Checking CRD versions..."
        for crd in virtualmachines providers vmclasses vmimages vmnetworkattachments vmsnapshots vmclones vmsets vmplacementpolicies; do
          echo "=== $crd.infra.virtrigaud.io ==="
          kubectl get crd ${crd}.infra.virtrigaud.io -o jsonpath='{.spec.versions[*].name}' | tr ' ' '\n' | sort
          echo ""
        done

    - name: Test Helm uninstall
      run: |
        helm uninstall virtrigaud
        sleep 10
        # CRDs should remain after chart uninstall
        kubectl get crd virtualmachines.infra.virtrigaud.io || {
          echo "Warning: CRDs were deleted with chart uninstall"
        }
