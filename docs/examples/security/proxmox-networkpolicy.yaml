# NetworkPolicy for Proxmox VE Provider
# Restricts network access to only required endpoints
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: provider-proxmox-netpol
  namespace: virtrigaud-system
spec:
  podSelector:
    matchLabels:
      app: provider-proxmox
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress: Allow connections from manager
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: virtrigaud-system
    - podSelector:
        matchLabels:
          app: virtrigaud-manager
    ports:
    - protocol: TCP
      port: 9443  # gRPC provider port
    - protocol: TCP
      port: 8080  # Health check port

  # Egress: Restrict to essential endpoints only
  egress:
  # DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Proxmox VE API endpoints
  - to:
    # Allow access to Proxmox VE cluster IPs
    # Replace with your actual Proxmox VE IP ranges
    - ipBlock:
        cidr: 192.168.1.0/24  # Proxmox VE network
        except:
        - 192.168.1.0/32      # Network address
        - 192.168.1.255/32    # Broadcast address
    ports:
    - protocol: TCP
      port: 8006  # Proxmox VE API port

  # Kubernetes API for health checks and metrics
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          component: kube-apiserver
    ports:
    - protocol: TCP
      port: 443

---
# Additional NetworkPolicy for development with fake server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: provider-proxmox-dev-netpol
  namespace: virtrigaud-system
  labels:
    environment: development
spec:
  podSelector:
    matchLabels:
      app: provider-proxmox
      environment: development
  policyTypes:
  - Egress
  
  egress:
  # Allow all egress for development (less restrictive)
  - to: []
    ports:
    - protocol: TCP
      port: 8006  # Fake PVE server
    - protocol: UDP
      port: 53    # DNS
    - protocol: TCP
      port: 53    # DNS over TCP
    - protocol: TCP
      port: 443   # HTTPS for image downloads

---
# ServiceMonitor for Prometheus scraping (if metrics enabled)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: provider-proxmox-metrics
  namespace: virtrigaud-system
spec:
  selector:
    matchLabels:
      app: provider-proxmox
  endpoints:
  - port: metrics
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
