apiVersion: infra.virtrigaud.io/v1alpha1
kind: Provider
metadata:
  name: vsphere-prod
  namespace: default
  labels:
    provider: vsphere
    environment: production
spec:
  type: vsphere
  endpoint: "https://vcenter.example.com/sdk"
  credentialSecretRef:
    name: vsphere-credentials
    namespace: default
  insecureSkipVerify: false
  defaults:
    datastore: vsanDatastore
    cluster: prod-cluster-01
    folder: "/Demo"
  rateLimit:
    qps: 10
    burst: 20
  runtime:
    mode: InProcess
    image: "ghcr.io/projectbeskar/virtrigaud/provider-vsphere:v0.1.0"
    version: "v0.1.0"
    replicas: 1
    service:
      port: 9443
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi
    nodeSelector:
      kubernetes.io/arch: amd64
    tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      readOnlyRootFilesystem: true
    env:
      - name: LOG_LEVEL
        value: "info"
      - name: METRICS_PORT
        value: "8080"
    tls:
      enabled: true
      secretRef:
        name: provider-tls
