# Build stage (musl)
FROM golang:1.23-alpine AS builder
ARG TARGETOS
ARG TARGETARCH
RUN apk add --no-cache \
    build-base pkgconfig libvirt-dev libxml2-dev openssh-client git

WORKDIR /workspace
COPY go.mod go.sum ./
COPY sdk/ sdk/
COPY proto/ proto/
RUN go mod download

COPY cmd/ cmd/
COPY api/ api/
COPY internal/ internal/

# external link not required on musl, but harmless
RUN CGO_ENABLED=1 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} \
    go build -o /out/provider cmd/provider-libvirt/main.go

# Runtime (musl)
FROM alpine:3.18
RUN apk add --no-cache libvirt-libs libxml2 ca-certificates openssh-client \
 && update-ca-certificates

RUN addgroup -g 1000 app \
 && adduser -D -u 1000 -G app -h /home/app -s /bin/sh app
ENV HOME=/home/app
ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
RUN mkdir -p /home/app/.ssh && chown -R app:app /home/app && chmod 700 /home/app/.ssh

WORKDIR /
COPY --from=builder /out/provider /usr/local/bin/provider-libvirt
RUN ln -s /usr/bin/ssh /usr/local/bin/ssh || true

USER app
ENTRYPOINT ["/usr/local/bin/provider-libvirt"]
