# Build stage with CGO support for libvirt
FROM golang:1.23-bookworm AS builder
ARG TARGETOS
ARG TARGETARCH

# Install build deps (incl. ssh in case go mod/git uses SSH URLs)
RUN apt-get update && apt-get install -y --no-install-recommends \
    libvirt-dev \
    pkg-config \
    gcc \
    openssh-client \
  && rm -rf /var/lib/apt/lists/*

WORKDIR /workspace

# Module manifests + local replaces
COPY go.mod go.mod
COPY go.sum go.sum
COPY sdk/ sdk/
COPY proto/ proto/

RUN go mod download

# Source
COPY cmd/ cmd/
COPY api/ api/
COPY internal/ internal/
# (proto already copied above; no need to copy twice)

# Build with CGO
RUN CGO_ENABLED=1 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} \
    go build -a -o provider cmd/provider-libvirt/main.go

# Runtime stage
FROM debian:bookworm-slim

# Force cache-bust for apt layer when you change CACHEBUST
ARG CACHEBUST=2

# Install runtime deps incl. OpenSSH client  
RUN apt-get update \
  && echo "=== Installing packages ===" \
  && apt-get install -y --no-install-recommends \
    libvirt0 \
    libxml2 \
    ca-certificates \
    openssh-client \
  && echo "=== Cleaning up ===" \
  && rm -rf /var/lib/apt/lists/* \
  && update-ca-certificates \
  && echo "=== Verifying SSH installation ===" \
  && dpkg -l | grep openssh \
  && which ssh \
  && ssh -V \
  && echo "=== SSH verification successful! CACHEBUST=$CACHEBUST ==="

# Create non-root user with a home (avoids odd ssh/HOME issues)
RUN groupadd -r virtrigaud \
  && useradd -r -g virtrigaud -m -d /home/virtrigaud -s /usr/sbin/nologin virtrigaud
ENV HOME=/home/virtrigaud

WORKDIR /
COPY --from=builder /workspace/provider /usr/local/bin/provider-libvirt

USER virtrigaud
ENTRYPOINT ["/usr/local/bin/provider-libvirt"]
